// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: debug.sql

package database

import (
	"context"
)

const debug = `-- name: Debug :many
SELECT column_name, data_type, character_maximum_length 
FROM information_schema.columns 
WHERE table_name = 'posts'
`

type DebugRow struct {
	ColumnName             interface{}
	DataType               interface{}
	CharacterMaximumLength interface{}
}

func (q *Queries) Debug(ctx context.Context) ([]DebugRow, error) {
	rows, err := q.db.QueryContext(ctx, debug)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []DebugRow
	for rows.Next() {
		var i DebugRow
		if err := rows.Scan(&i.ColumnName, &i.DataType, &i.CharacterMaximumLength); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
