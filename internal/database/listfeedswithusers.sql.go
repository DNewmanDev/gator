// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: listfeedswithusers.sql

package database

import (
	"context"
)

const listFeedsWithUsers = `-- name: ListFeedsWithUsers :many

SELECT 
feeds.name AS feed_name,
feeds.url AS feeds_url,
users.name AS user_name
FROM feeds
JOIN users ON feeds.user_id = users.id
`

type ListFeedsWithUsersRow struct {
	FeedName string
	FeedsUrl string
	UserName string
}

func (q *Queries) ListFeedsWithUsers(ctx context.Context) ([]ListFeedsWithUsersRow, error) {
	rows, err := q.db.QueryContext(ctx, listFeedsWithUsers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListFeedsWithUsersRow
	for rows.Next() {
		var i ListFeedsWithUsersRow
		if err := rows.Scan(&i.FeedName, &i.FeedsUrl, &i.UserName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
